---
name: Auto Update DB
on:
  issues:
    types: [labeled]

# no point in concurrency since it still cancels pending jobs
# concurrency:
#   # only if label starts with "request" then add issue number to end of group
#   group: >-
#     ${{ github.workflow }}-${{ github.event.label.name }}
#     ${{ startsWith(github.event.label.name, 'request-') | github.event.issue.number }}
#   cancel-in-progress: false  # false to act as queue

jobs:
  auto_update_db:
    if: >-
      (github.event.label.name == 'add-game' || github.event.label.name == 'add-movie') ||
      (github.event.label.name == 'request-game' || github.event.label.name == 'request-movie')
    runs-on: ubuntu-latest

    steps:
      - name: Check if member
        if: startsWith(github.event.label.name, 'add-')
        # if someone, somehow, adds a label that starts with "add-" but isn't a member, then exit
        run: |
          gh api \
          -H "Accept: application/vnd.github+json" \
          /orgs/${{ github.repository_owner }}/members/${{ github.actor }} || exit 1

      - name: Queue
        # we only want to run one add job at a time, so queue them
        if: startsWith(github.event.label.name, 'add-')
        uses: ahmadnassri/action-workflow-queue@v1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: database
          path: database
          persist-credentials: false  # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0  # otherwise, will fail to push refs to dest repo

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Get Item Type
        id: type
        run: |
          # remove `request-` OR `add-` from the label name using sed
          echo "item_type=$(echo "${{ github.event.label.name }}" | sed -e 's/\(request-\|add-\)//g')" >> $GITHUB_OUTPUT

      - name: Parse Issue
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          issue-body: ${{ github.event.issue.body }}
          template-path: .github/ISSUE_TEMPLATE/${{ steps.type.outputs.item_type }}-theme.yml

      - name: Crease JSON
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}' > submission.json

      - name: Get Issue Author ID
        id: author
        run: |
          echo "issue_author_id=$(echo "${{ github.event.issue.user.id }}")" >> $GITHUB_OUTPUT

      - name: Update
        env:
          ISSUE_AUTHOR_USER_ID: ${{ steps.author.outputs.issue_author_id }}
          TMDB_API_KEY_V3: ${{ secrets.TMDB_API_KEY_V3 }}
          TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}
        run: |
          python -u ./updater.py --issue_update --${{ steps.type.outputs.item_type }}

      - name: Git Diff
        id: diff
        working-directory: database
        run: |
          echo "::group::issue_comment"
          git add .
          echo "" >> ../comment.md
          echo "\`\`\`diff" >> ../comment.md
          echo "$(git diff --cached)" >> ../comment.md
          echo "\`\`\`" >> ../comment.md
          cat ../comment.md
          echo "::endgroup::"

          echo "::group::issue_title"
          cat ../title.md
          echo "issue_title=$(cat ../title.md)" >> $GITHUB_OUTPUT
          echo "::endgroup::"

      - name: Update Issue Title
        uses: actions/github-script@v6
        env:
          ISSUE_TITLE: ${{ steps.diff.outputs.issue_title }}
        with:
          github-token: ${{ secrets.GH_BOT_TOKEN }}
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: process.env.ISSUE_TITLE
            })

      - name: Issue comment
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GH_BOT_TOKEN }}
          message-path: comment.md

      - name: GitHub Commit & Push
        if: startsWith(github.event.label.name, 'add-')
        uses: actions-js/push@v1.4
        with:
          author_email: ${{ secrets.GH_BOT_EMAIL }}
          author_name: ${{ secrets.GH_BOT_NAME }}
          branch: database  # commit to database
          directory: database  # use the database directory
          github_token: ${{ secrets.GH_BOT_TOKEN }}
          message: 'resolves #${{ github.event.issue.number }}'

      - name: Close Issue
        if: startsWith(github.event.label.name, 'add-')
        uses: peter-evans/close-issue@v2
        with:
          close-reason: completed
          comment: |
            This theme has been added/updated and will be available on the next daily scheduled update.
          token: ${{ secrets.GH_BOT_TOKEN }}

      - name: Lock Issue
        if: startsWith(github.event.label.name, 'add-')
        uses: OSDKDev/lock-issues@v1.1
        with:
          repo-token: ${{ secrets.GH_BOT_TOKEN }}
